@using FlexGains.Models;
@model FlexGains.Models.WorkoutStep

@{
    ViewBag.Title = "Create";
}

    <h2>@Html.DisplayFor(model => model.Workout.WorkoutName)</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    @Html.DropDownListFor(model=>model.Exercise.GroupId, (SelectList) ViewBag.AllMuscleGroups, "Please Select a Muscle Group")

    <div style="display:none" id="mapControl">
        @foreach(KeyValuePair<MuscleGroup, List<Exercise>>KVP in ViewBag.MuscleGroupMap)
        {
            <div id="@("MuscleGroup_"+ KVP.Key.GroupId)">
                @foreach(Exercise exercise in KVP.Value)
                {
                    <div>@exercise.ExerciseId:@exercise.ExerciseName</div>
                }
            </div>
        }
    </div>
    <div class="form-horizontal">
        <h4></h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.WorkoutId)
    <div class="form-group">
        @Html.LabelFor(model => model.ExerciseId, "Select an Exercise from the list", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.ListBox("ExerciseId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ExerciseId, "", new { @class = "text-danger" })
        </div>
        <p>
            @Html.ActionLink("Don't see the exercise you want? Add it here!", "Create", "Exercises")
        </p>
    </div>
        @Html.HiddenFor(model => model.WorkoutOrder)
        <div class="form-group">
            @Html.LabelFor(model => model.RepsNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RepsNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RepsNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.SetsNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SetsNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SetsNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div class="form-group">
    <div class="col-md-offset-2 col-md-10">
        <a href="/Workouts/index/true" class="btn btn-default">Finish Workout</a>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval") 
    <script type="text/javascript">

        $(document).ready(function ()
        {
            var exerciseElement = $('#ExerciseId')
            exerciseElement.empty()
        })
function filter(GroupId) {
    var exerciseElement = $('#ExerciseId')
    exerciseElement.empty()
    var groupDiv = $("#MuscleGroup_" + GroupId)
    for (var i = 0; i < groupDiv.children().length; i++)
    {
        var child = groupDiv.children()[i]
        var exerciseSplit = child.innerText.split(":")
        var option = $("<option value=" + exerciseSplit[0] + ">" + exerciseSplit[1] + "</option>")
        exerciseElement.append(option)
    }
        }
        $('#Exercise_GroupId').change(function () {
    filter($(this).val())
        })

    </script>
}
